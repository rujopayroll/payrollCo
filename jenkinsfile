def VERSION = "${env.BUILD_NUMBER}"
def DIST_ARCHIVE = "dist.${env.BUILD_NUMBER}"
def S3_BUCKET = 'dev-payroll-web'

pipeline 
{
    agent any
    tools {nodejs "14.20.1"}

   
    environment 
    {
        AWS_ACCOUNT_ID=746662389335
        AWS_DEFAULT_REGION="us-east-1"
        bucket = "dev-payroll-web"
    }

   stages {
        stage('NPM Install') {
            steps {
              sh 'npm install --no-audit'
         }
      }
        // stage('Test') {
        //     steps {
        //         sh 'npm run test'
        //     }
        // }
        stage('Build') {
            steps {
                script {
                     nodejs(nodeJSInstallationName: 'v16.20.0') {
                        sh 'npm run build'
                     }
               }

            }
        }
        stage('Deploy') {
            steps {
                withCredentials([[
                            $class: 'AmazonWebServicesCredentialsBinding',
                            credentialsId: "aws_credentials",
                            accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                            secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) 
                            {
                                sh "cd dist"
                                sh "aws s3 cp dist/  s3://${S3_BUCKET} --recursive"
                            }
            }
        }

        // stage('Archive') {
        //     steps {
        //       sh "cd dist && zip -r ../${DIST_ARCHIVE}.zip . && cd .."
        //       archiveArtifacts artifacts: "${DIST_ARCHIVE}.zip", fingerprint: true
        //     }
        // }
        // stage("Upload"){
        //     steps{
        //              withAWS(region:"${region}", credentials:"${aws_credential}"){
        //                  s3Upload(file:"${TAG_NAME}", bucket:"${S3_BUCKET}", path:"${TAG_NAME}/")
        //              }
        //         }    
        // }

        // stage('Deploy2') {
                
        //     // steps {
        //     //     def identity=awsIdentity();
        //     //     s3Upload acl: 'PublicRead', bucket: "${S3_BUCKET}", file: 'THE_ARTIFACT_TO_BE_UPLOADED_FROM_JENKINS', path: "PATH_ON_S3_BUCKET", workingDir: '.'

        //     //     //sh "aws s3 cp ${DIST_ARCHIVE}.zip s3://${S3_BUCKET}/${DIST_ARCHIVE}.zip --profile=default"
        //     //     //sh "aws deploy create-deployment --application-name Angular --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name angular-deployment-group --s3-location bucket=${S3_BUCKET},bundleType=zip,key=${DIST_ARCHIVE}.zip"
        //     // }
        // }
    }
    post {
            success {
                script {
                    slackSend(channel: "jenkins", message: "my-first-pipeline-slack passed successfully")
                }
            }
        }

    // post {
    //     always {
    //         script {
    //             currentBuild.result = currentBuild.result ?: 'SUCCESS'
    //             notifyBitbucket()

    //             if (currentBuild.result == 'SUCCESS') {
    //               echo 'notify slack'
    //             } else {
    //               echo 'notify slack'
    //             }
    //         }
    //     }
    // }
}
