def VERSION = "${env.BUILD_NUMBER}"
def DIST_ARCHIVE = "dist.${env.BUILD_NUMBER}"
def S3_BUCKET = 'dev-payroll-web'

pipeline 
{
    agent any
    tools {nodejs "14.20.1"}

   
    environment 
    {
        AWS_ACCOUNT_ID=746662389335
        AWS_DEFAULT_REGION="us-east-1"
    }

   stages {
        // stage('NPM Install') {
        //     steps {
        //         // script {
        //         //     notifyBitbucket(buildStatus: 'INPROGRESS')
        //         // }
               
        //         sh 'npm install --no-audit'
        //     }
        // }
        // stage('Test') {
        //     steps {
        //         sh 'npm run test'
        //     }
        // }
        stage('Build') {
            steps {
                script {
                     nodejs(nodeJSInstallationName: 'node 18.19.0') {
                        //  sh 'corepack enable'
                        //  sh 'corepack prepare pnpm@latest-8 --activate'
                        sh '/usr/bin/ng --build --optimization=true --source-map=false --configuration production --aot'
                        //  sh 'pnpm install'
                        //  sh 'pnpm build:prod'
                     }
                    // echo "Build number ${GIT_COMMIT}"
                    // docker.withRegistry('https://registry.openexl.com/repository/d1', 'jenkins_docker') {
                    // def app = docker.build("piggys-wallet-frontend:${GIT_COMMIT}", "--build-arg PIGGYS_BUILD_SHA=${SHORT_COMMIT} -f ${DOCKERFILE} .").push()
                  }
                //sh '/usr/bin/ng --build --optimization=true --source-map=false --configuration production --aot'
                //sh 'CI=false npm run build'
            }
        }
        stage('Archive') {
            steps {
              sh "cd dist && zip -r ../${DIST_ARCHIVE}.zip . && cd .."
              archiveArtifacts artifacts: "${DIST_ARCHIVE}.zip", fingerprint: true
            }
        }
        stage('Deploy') {
            steps {
                sh "aws s3 cp ${DIST_ARCHIVE}.zip s3://${S3_BUCKET}/${DIST_ARCHIVE}.zip --profile=default"
                sh "aws deploy create-deployment --application-name Angular --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name angular-deployment-group --s3-location bucket=${S3_BUCKET},bundleType=zip,key=${DIST_ARCHIVE}.zip"
            }
        }
    }

    post {
        always {
            script {
                currentBuild.result = currentBuild.result ?: 'SUCCESS'
                notifyBitbucket()

                if (currentBuild.result == 'SUCCESS') {
                  echo 'notify slack'
                } else {
                  echo 'notify slack'
                }
            }
        }
    }
}
